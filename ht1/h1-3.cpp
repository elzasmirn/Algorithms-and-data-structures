/*Последовательность строк
Последовательность строк формируется следующим образом:
Первая строка состоит из цифры 1.
Каждая из последующих строк формируется из номера строки, записанного в виде последовательности десятичных цифр, за которым дописана предыдущая строка и затем перевёрнутая предыдущая строка.
Вот несколько первых строк:
1
211
3211112
432111122111123
5432111122111123321111221111234
Заметьте, что десятая строка начнётся с символов 10, одиннадцатая — с символов 11 и так далее.
Ваша задача заключается в том, чтобы по заданному номеру строки и номеру её элемента вывести символ, стоящий в ней на указанном месте.
Input format
N M
P1 P2 ... PM
Ограничения:
1⩽N⩽30
1⩽M⩽100000
1⩽Pi⩽length(string).
Нумерация строк и символов в строках начинается с единицы.
Output format
M символов, не разделённых пробелами, соответствующие позициям Pi.*/

#include <iostream>

using namespace std;

int rec(int n, unsigned long long p)
{
    if (n < 10)
    {
        unsigned long long sz = (1ULL << n) - 1ULL;
        if (p <= (sz >> 1))
        {
            if (p == 0) return n;
            else return rec(n - 1, p - 1);
        }
        else return rec(n - 1, sz - p - 1);
    }
    else
    {
        unsigned long long sz = (1ULL << n) - 1ULL + (1ULL << (n - 9));
        if (p <= (sz >> 1))
        {
            if (p == 0) return n / 10;
            else if (p == 1) return n % 10;
            else return rec(n - 1, p - 2);
        }
        else return rec(n - 1, sz - p - 2);
    }
}

int main()
{
    int N, M;
    cin >> N >> M;
    for (int i = 0; i < M; ++i)
    {
        unsigned long long p;
        cin >> p;
        cout << rec(N, p - 1);
    }
    return 0;
}