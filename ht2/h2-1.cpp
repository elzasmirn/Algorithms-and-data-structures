/*Камера хранения
На железнодорожном вокзале столицы Бурляндии решили установить новую автоматическую камеру хранения. 
Для этого потребовалось узнать, сколько ячеек одновременно занято хранящимся багажом. 
Было установлено несколько датчиков использования старой камеры хранения, фиксировавших момент прихода пассажира и занятия им ячейки, а так же момент ухода пассажира и момент освобождения им ячейки. 
Протокол прихода и ухода пассажиров за одни сутки приведён далее. 
Ячейка не освобождается мгновенно, поэтому если в какое-то время один пассажир ушёл и в это же время пришёл другой пассажир, требуется две ячейки. 
Определите максимальное количество одновременно занятых ячеек, наблюдаемое в течении суток.
Камера открыта круглосуточно. Времена прихода и ухода пассажиров находятся в пределах одних суток. В 00:00 камера хранения пуста.
Input format
N (количество пассажиров, 1⩽N⩽1000000).
HA1:MA1 HD1:MD1
...
HAN:MAN HDN:MDN
Output format
MaximumNumberOfBusyCells*/

#include <iostream>
#include <vector>
#include <algorithm>

int main()
{
    int N;
    std::cin >> N;
    std::vector< std::pair<int, char> > set_of_seg;
    int in_h, in_m, out_h, out_m;
    for (int i = 0; i < N; ++i)
    {
        char c;
        std::cin >> in_h >> c >> in_m;
        set_of_seg.push_back({in_h * 60 + in_m, 'i'}); // in
        std::cin >> out_h >> c >> out_m;
        set_of_seg.push_back({out_h * 60 + out_m, 'o'}); // out
    }
    sort(set_of_seg.begin(), set_of_seg.end());
    int cnt = 0, res = 0;
    for (int i = 0; i < set_of_seg.size(); i++)
    {
        if (set_of_seg[i].second == 'i')
        {
            cnt++;
            if (cnt > res) res = cnt;
        }
        if (set_of_seg[i].second == 'o') cnt--;
    }
    std::cout << res;
    return 0;
}